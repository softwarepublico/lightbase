/*
Copyright 1990-2008 Light Infocon Tecnologia S/A

Este arquivo é parte do programa LightBase - Banco de Dados Textual Documental

O LightBase é um software livre; você pode redistribui-lo e/ou modifica-lo dentro 
dos termos da Licença Pública Geral GNU como publicada pela Fundação do Software 
Livre (FSF); na versão 2 da Licença.

Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA 
GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO 
EM PARTICULAR. Veja a Licença Pública Geral GNU para maiores detalhes.

Você deve ter recebido uma cópia da Licença Pública Geral GNU versao 2, sob o 
título "LICENCA.txt", junto com este programa, se não, escreva para a Fundação do 
Software Livre(FSF) Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
*/


// Funcoes de buffer 
// Arquivo de definicoes
#ifndef _FBUFF_H_
#define _FBUFF_H_

#ifndef	_EXPORTLIST_H_
#include <explist.h>
#endif

#ifndef	_SERLST_H_
#include <serlst.h>
#endif

#ifndef	_ALLBASEL_H_
#include <allbasel.h>
#endif

#ifndef	_SVBASEL_H_
#include <svbasel.h>
#endif

#ifndef	_PERMLIST_H_
#include <permlist.h>
#endif

#ifndef	_BUFFERCL_H_
#include <buffercl.h>
#endif

#ifndef _USRINFOL_H_
	#include <usrinfol.h>
#endif	// _USRINFOL_H_

#ifndef	_ACLLIST_H_
	#include <acllist.h>
#endif

#ifndef __lbsrpc_h__
	#include <lbsrpc.h>    // header file generated by MIDL compiler
#endif	// __lbsrpc_h__

#ifndef	_DDECLIENT_OCCURRENCE_H_
#include <occurcl.h>
#endif

//
//	Essas classes vao servir para a cache de ocorrencias; devem ser 
//	visiveis tanto para o cliente quanto para o servidor	
//
class _LBSCLASS	COccurInfo {
public:
	LBSC_Occurrence	*lbscoOccurInfo;

	COccurInfo( LBSC_Occurrence *pOccur );	// inicializa os atributos
	~COccurInfo();	
	int Compare(COccurInfo *criOther, int ); // retorna como comparar dois COccurInfo
	COccurInfo *Duplicate();	// retorna uma replica do objeto
};

class _LBSCLASS	COccurList : public LBSC_DList<COccurInfo>{
};


int _LBSCLASS MakeBufferFromList( LBSC_ExportBaseList *, C_Buffer ** );
int _LBSCLASS MakeBufferFromList( LBSC_SerialNumberList *, C_Buffer ** );
int _LBSCLASS MakeBufferFromList( LBSC_AllBasesList *, C_Buffer ** );
int _LBSCLASS MakeBufferFromList( LBSC_ServerBasesList *, C_Buffer ** );
int _LBSCLASS MakeBufferFromList( LBSC_PermList *, C_Buffer ** );
int _LBSCLASS MakeBufferFromArray( TField *, C_Buffer **, int );
int	_LBSCLASS MakeBufferFromArray( TUDBRecord *, C_Buffer **, int );
int	_LBSCLASS MakeBufferFromArray( char **, C_Buffer **, int );
int _LBSCLASS MakeBufferFromArray( TSlotCache &, C_Buffer ** );
int _LBSCLASS MakeExportBaseList( LBSC_ExportBaseList *, C_Buffer & );
int _LBSCLASS MakeSerialNumberList( LBSC_SerialNumberList *, C_Buffer & );

int _LBSCLASS MakeBufferFromList( LBSC_AppUserInfoList *, C_Buffer ** );
int _LBSCLASS MakeBufferFromList( LBSC_AppNetInfoList	*, C_Buffer ** );
int _LBSCLASS MakeBufferFromList( LBSC_AppSessionNetInfoList	*, C_Buffer ** );
int _LBSCLASS MakeBufferFromList( LBSC_AppBaseNetInfoList	*, C_Buffer ** );
int SizeOf( LBSC_AppUserInfoList * );
int SizeOf( LBSC_AppNetInfoList	* );
int SizeOf( LBSC_AppSessionNetInfoList	* );
int SizeOf( LBSC_AppBaseNetInfoList	* );
int SizeOf( LBSC_ACLList * );
int SizeOf( LBSC_PermList * );
int SizeOf( COccurList * );

LBSC_AppUserInfoList	_LBSCLASS *MakeAppUserInfoList( C_Buffer & );
LBSC_AppNetInfoList		_LBSCLASS *MakeAppInfoList( C_Buffer & );
LBSC_AppSessionNetInfoList	_LBSCLASS *MakeSessInfoList( C_Buffer & );
LBSC_AppBaseNetInfoList	_LBSCLASS *MakeBaseInfoList( C_Buffer & );

LBSC_ServerBasesList	_LBSCLASS *MakeServerBasesList( C_Buffer & );
LBSC_AllBasesList		_LBSCLASS *MakeAllBasesList( C_Buffer &);
TField 					_LBSCLASS *MakeFieldArray( C_Buffer & );
TUDBRecord				_LBSCLASS *MakeRecordArray( C_Buffer & );
char 					_LBSCLASS **MakeStringArray( C_Buffer &, int );
LBSC_PermList 			_LBSCLASS *MakePermList( C_Buffer &);
TSlotCache				_LBSCLASS *MakeBaseCacheArray( TSROut_GenericBuffer );
LBSC_ACLList			_LBSCLASS *MakeACLList( TSROut_GenericBuffer );
int						_LBSCLASS MakeBufferFromList( LBSC_ACLList *, C_Buffer **);
COccurList				_LBSCLASS *MakeOccurList( TSROut_GenericBuffer );


#endif
